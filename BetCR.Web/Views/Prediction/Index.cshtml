@{
    ViewData["Title"] = "Prediction";
}
@using BetCR.Repository.Entity
@using Newtonsoft.Json
@using System.Security.Claims
@model List<BetCR.Repository.Entity.Match>


@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@section Head
{
    <link rel="stylesheet" href="/static/css/flip-card.css" />
}

<div id="prediction">
    <div id="league-panel">
        @{

            var orderedMatches = Model.OrderBy(o => DateTimeOffset.UtcNow.ToUnixTimeSeconds() > o.MatchDateEpoch).ThenBy(o => o.MatchDateEpoch);

            var groupedMatches = orderedMatches.GroupBy(g => String.Join(" - ", g.Stage.League.LeagueName, g.Stage.StageName));

            foreach (var gm in groupedMatches)
            {
                var matches = gm.ToList();
                var stage = @matches.FirstOrDefault()?.Stage;
                <div class="card " data-stage-id="@stage.ExternalId">
                    <h5 class="card-header bg-success">
                        @{
                            if (stage.HasStanding)
                            {
                                <a class="league-table text-white" data-fancybox data-options='{"type" : "iframe", "fitToView":false, "iframe" : {"preload" : false, "css" : {}}}' data-src="/league/stages/@matches.First().Stage.Id/standings" href="javascript:;">
                                    @gm.Key
                                </a>
                            }
                            else
                            {
                                <a class="league-table text-white">
                                    @gm.Key
                                </a>
                            }
                        }

                    </h5>
                    <div class="card-body">
                        <div class="row">
                            @{
                                foreach (var match in matches)
                                {

                                    var colorPaletteHome = match.HomeTeam.DominantColors?.Split(";").ToList();
                                    var homeDomColor1 = colorPaletteHome?.FirstOrDefault() ?? "#fff";
                                    var colorPaletteAway = match.AwayTeam.DominantColors?.Split(";").ToList();
                                    var awayDomColor1 = colorPaletteAway?.FirstOrDefault() ?? "#fff";

                                    <div class="col-sm-4" data-match-id="@match.Id" data-home-team="@match.HomeTeam.Id" data-away-team="@match.HomeTeam.Id" data-bet-leverage="1">

                                        @{
                                            var userBet = match.UserMatchBets.FirstOrDefault(w => w.User.Id == HttpContextAccessor.HttpContext?.User.Claims.FirstOrDefault(w => w.Type == ClaimTypes.NameIdentifier)?.Value);
                                            if (@userBet == null)
                                            {
                                                await Html.RenderPartialAsync("Match/_MatchCard", match, new ViewDataDictionary(ViewData) { { "UserBet", userBet } });

                                            }
                                            else
                                            {

                                                <div class="flip-card" data-current=".flip-card-front" data-other=".flip-card-back">
                                                    <div class="flip-card-inner">
                                                        <div class="flip-card-front">
                                                            <img class="flip-card-change-view" />
                                                            @{ await Html.RenderPartialAsync("Match/_MatchCard", match, new ViewDataDictionary(ViewData) { { "UserBet", userBet } }); }
                                                        </div>
                                                        <div class="flip-card-back">
                                                            <img class="flip-card-change-view" />
                                                            <div class="card border shadow-0  match-row">
                                                                <div class="card-header">
                                                                    <h3>What were the users' predictions?</h3>
                                                                </div>
                                                                <div class="card-body mh-200">
                                                                    <div class="row margin-bottom-20">
                                                                        <div class="col-sm-12">
                                                                            @{
                                                                                var homeWin = match.UserMatchBets.Count(w => w.HomeTeamScore > w.AwayTeamScore);
                                                                                var draw = match.UserMatchBets.Count(w => w.HomeTeamScore == w.AwayTeamScore);
                                                                                var awayWin = match.UserMatchBets.Count(w => w.HomeTeamScore < w.AwayTeamScore);


                                                                            }
                                                                            <canvas id='@($"{match.Id}_chart")' class="bet-chart" data-labels='@match.HomeTeam.Name,Draw,@match.AwayTeam.Name' data-values='[@homeWin,@draw,@awayWin]' , data-colors='@homeDomColor1,#EEEEEE,@awayDomColor1' style="width: 200px; height: 200px;"></canvas>
                                                                            @*<canvas id="chart-data-mdb-labels-example"></canvas>*@
                                                                            @*<div class="progress" style="height: 40px">
                                                                                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" data-toggle="tooltip" style='background-color: @homeDomColor1; width: @($"{match.UserMatchBets.Count(w => w.HomeTeamScore > w.AwayTeamScore) / totalBets * 100}%")'>
                                                                                    </div>
                                                                                    <div class="progress-bar progress-bar-striped  progress-bar-animated" role="progressbar" data-toggle="tooltip" style='background-color: #FFA900; width: @($"{match.UserMatchBets.Count(w => w.HomeTeamScore == w.AwayTeamScore) / totalBets * 100}%")'>
                                                                                    </div>
                                                                                    <div class="progress-bar progress-bar-striped  progress-bar-animated" role="progressbar" data-toggle="tooltip" style='background-color: @awayDomColor1; width: @($"{match.UserMatchBets.Count(w => w.AwayTeamScore > w.HomeTeamScore) / totalBets * 100}%")'>
                                                                                    </div>
                                                                                </div>*@
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            }
                                        }
                                    </div>

                                }
                            }
                        </div>
                    </div>
                </div>

            }

        }
    </div>
</div>

@section Scripts
{
    <script src="/static/js/vendor/jbvalidator.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>




    <script>
        $(document).ready(function () {
            $(".team-logo").tooltip({ placement: 'bottom' });
            $(".hover-overlay a").tooltip({ placement: 'bottom' });


            $(".bet-chart").each((index, element) => {

                var labels = $(element).data("labels").split(",");
                var values = $(element).data("values");
                var colors = $(element).data("colors").split(",");
                new Chart(element, {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                data: values,
                                backgroundColor: colors
                            }]
                    },
                    options: {
                        title: {
                            display: true,
                            text: 'Pie Chart'
                        },
                        hoverOffset: 4,
                        responsive: true,
                        maintainAspectRatio: false,
                    }
                });
            }
            );
        });










        $(".flip-card-change-view").on("click",
            function (e) {
                const element = e.target.parentElement.parentElement.parentElement;
                const current = $(element).attr("data-current");
                const other = $(element).attr("data-other");
                $(element).find(".flip-card-inner").toggleClass("flip");
                $(element).find(current).css("visibility", "hidden");
                $(element).find(other).css("visibility", "visible");
                $(element).attr("data-current", other);
                $(element).attr("data-other", current);


            });

        $(".match-form").jbvalidator({
            errorMessage: true,
            successClass: true,
            errorMessageHandler: function (el, event) {
                $(el).removeClass("success");
                $(el).addClass("error");

            },
            successMessageHandler: function (el, event) {
                $(el).removeClass("error");
                $(el).addClass("success");
            }
        });

        $(".match-form").on("submit",
            function (e) {
                e.preventDefault();
                var element = e.target;

                const homeTeamScore = $(element).find(".match-bet-home").val();
                const awayTeamScore = $(element).find(".match-bet-away").val();
                const leverage = $(element).attr("data-bet-leverage");
                const matchId = $(element).attr("data-match-id");

                const model = {
                    MatchId: matchId,
                    AwayTeamScore: awayTeamScore,
                    HomeTeamScore: homeTeamScore,
                    Leverage: leverage
                };

                var actionUrl = $(element).attr("data-action-url");

                $.ajax({
                    url: 'api/UserMatchBet',
                    type: 'POST',
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function (data) {

                    },
                    success: function (data) {
                        $.get(actionUrl, function (data) {
                            $(element.parentElement).html(data);
                        });
                    },
                    error: function (err) {
                    }
                });

            });

        $(".btn-group .btn").click(function (e) {

            const parentElement = e.target.parentElement;
            $(parentElement).find(".btn").removeClass("primary-inverse");
            $(parentElement).find(".btn").addClass("primary");
            const element = e.target;
            const matchCard = e.target.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement;

            const currentLeverage = $(matchCard).attr("data-bet-leverage");

            if (currentLeverage === "1") {
                $(matchCard).attr("data-bet-leverage", $(element).attr('data-bet-leverage'));
                $(element).removeClass("primary");
                $(element).addClass("primary-inverse");
            }
            else {
                $(matchCard).attr("data-bet-leverage", "1");
            }



        });
    </script>
}
